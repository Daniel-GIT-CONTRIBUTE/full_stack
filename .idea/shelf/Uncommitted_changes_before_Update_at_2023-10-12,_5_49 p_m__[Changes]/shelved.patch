Index: route.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\nImport statements for the Bottle web framework.\n\"\"\"\nfrom bottle import Bottle, request, run, template, static_file, redirect\n\n\napp = Bottle()\n@app.route('/')\ndef server():\n    return static_file('login.html', root='./templates')\n@app.route('/public')\ndef public():\n    return static_file('public.html', root='./templates')\n@app.route('/makeAccount')\ndef public():\n    return static_file('makeAccount.html', root='./templates')\n@app.route('/review')\ndef review():\n    username = request.query.username\n    return template('templates/review.html', username=username)\n@app.route('/static/<filename>')\ndef serve_static(filename):\n    return static_file(filename, root='./templates')\n\n\n@app.route('/submit', method='POST')\ndef submit():\n    # username = request.forms.get('username')\n    # Assuming you want to pass the username as a parameter to the second page\n    # redirect(f'/review?username={username}')\n    action = request.forms.get('action')\n    if action == 'SAVE':\n        # Logic for saving\n        pass\n    elif action == 'PUBLISH':\n        # Logic for publishing\n        pass\n    elif action == 'LOGIN':\n        # Logic for login\n        username = request.forms.get('username')\n        redirect(f'/review?username={username}')\n    else:\n        # Handle other cases\n        pass\n\n\n\n\n\n\nif __name__ == '__main__':\n    HOST_NAME = 'localhost'\n    SERVER_PORT = 8080\n    run(app, host=HOST_NAME, port=SERVER_PORT, debug=True)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/route.py b/route.py
--- a/route.py	(revision a689afe152fd5a148109b11c6b67f6ac27b96441)
+++ b/route.py	(date 1697141772862)
@@ -5,6 +5,9 @@
 
 
 app = Bottle()
+"""
+Services: File address reference for each HTML file  
+"""
 @app.route('/')
 def server():
     return static_file('login.html', root='./templates')
